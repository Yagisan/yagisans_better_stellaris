# Orbital Fortress System
sorbital_fortress = {
	potential = {
		is_orbital_ring = yes
		OR = {
			has_starbase_module = orbital_ring_gun_battery
			has_starbase_module = orbital_ring_missile_battery
			has_starbase_module = orbital_ring_hangar_bay
		}
	}
	ai_use_defense_platforms = yes	#AI will not build defense platforms otherwise, except in the capital system
	weight_modifier = {
		base = 0
		complex_trigger_modifier = {
			# +75 for each gun_battery
			trigger = count_starbase_modules
			parameters = {
				type = orbital_ring_gun_battery
			}
			mode = add
			mult = 75
		}
		complex_trigger_modifier = {
			# +75 for each missile_battery
			trigger = count_starbase_modules
			parameters = {
				type = orbital_ring_missile_battery
			}
			mode = add
			mult = 75
		}
		complex_trigger_modifier = {
			# +75 for each hangar_bay
			trigger = count_starbase_modules
			parameters = {
				type = orbital_ring_hangar_bay
			}
			mode = add
			mult = 75
		}
	}
	ai_design = {
		min = {
			base = 0
		}
		ratio = {
			base = 0.25
			modifier = {
				add = 0.15
				exists = owner
				owner = {
					is_militarist = yes
				}
			}
		}
		# token followed by priority
		buildings = {
			command_center = {
				base = 5
			}
			black_hole_observatory = {
				base = 2
			}
			nebula_refinery = {
				base = 2
			}
			target_uplink_computer = {
				base = 2
			}
			defense_grid = {
				base = 1
			}
			communications_jammer = {
				base = 1
			}
			disruption_field = {
				base = 1
			}
		}
		modules = {
			orbital_ring_hangar_bay = {
				base = 1
				modifier = {
					factor = 3
					owner = {
						is_preferred_weapons = weapon_type_strike_craft
					}
				}
			}
			orbital_ring_missile_battery = {
				base = 1
				modifier = {
					factor = 3
					owner = {
						is_preferred_weapons = weapon_type_explosive
					}
				}
			}
			orbital_ring_gun_battery = {
				base = 1
				modifier = {
					factor = 3
					owner = {
						OR = {
							is_preferred_weapons = weapon_type_energy
							is_preferred_weapons = weapon_type_kinetic
						}
					}
				}
			}
		}
	}
}