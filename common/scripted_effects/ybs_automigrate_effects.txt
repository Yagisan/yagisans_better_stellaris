# THIS - Country
# PREV - Pop
# We are going to look for a new home for the unemployed pop based on its traits.
# Where possible we will try to match them to a planet that they would be most
# productive one. If that's not possible, then to a random planet that has jobs
# and housing available.
#
# We are going to search in this order:
# - Likes Tomb Worlds (targeted job types first)
# - Needs Habitats (targeted job types first)
# - Then we'll do 3 passes of the targeted job types.
# - First at 80%, then 60%, then any%.
# - Research
# - Unity
# - Foundry
# - Factory
# - Refinery
# - Trade
# - Fortess
# - Mining
# - Energy
# - Farming
# - Popgrowth
# - Then we'll check based on habitablity only.
# - 80% or better habitablity
# - 60% or better habitablity
# - 40% or better habitablity
# - any free jobs
# - Cosmogenesis
ybs_automigrate_unemployed = {
	set_variable = {
		which = ybs_planet_found
		value = -1
	}
	# Check for Tomb Worlds first
	ybs_automigrate_tomb_world = yes
	# Check for Habitats for Void Dwellers second
	ybs_automigrate_habitat = yes
	# Check other worlds now
	ybs_automigrate_world_80 = yes
	# 60% habitablity specalised migration now.
	ybs_automigrate_world_60 = yes
	# any% habitablity specalised migration now.
	ybs_automigrate_world_any = yes
	# This is non-specalised migration now. Habitablity is key.
	ybs_automigrate_world_a_job = yes
	# If we found a new home, deduct cost.
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
		PREV = {
			ybs_automigrate_charge_resettlement_cost = yes
			# Clear category so they will take any available jobs.
			clear_pop_category = yes
			# Set a timed flag, so we don't try to move them again soon.
			set_timed_pop_flag = {
				flag = ybs_recently_migrated
				years = 1
			}
			if = {
				limit = {
					is_robot_pop = yes
				}
				# Set a timed flag, we don't charge for ping ponging.
				set_timed_pop_flag = {
					flag = ybs_robot_ping_pong
					# 3 years ought to be enough to build a suitable job.
					years = 3
				}
			}
		}
	}
	# Could not find a suitable location.
	else = {
		log = "Yagisan - No Employment found."
	}
}

# This is for an employed pop, looking for a world with better habitablity.
# It still requires a free job available.
# We are going to look for a new home for the employed pop based on its traits.
# Where possible we will try to match them to a planet that they would be most
# productive one. If that's not possible, then to a random planet that has jobs
# and housing available.
#
# We are going to search in this order:
# - Likes Tomb Worlds (targeted job types first)
# - Needs Habitats (targeted job types first)
# - We'll do 2 passes of the targeted job types.
# - First at 80%, then 60%.
# - Research
# - Unity
# - Foundry
# - Factory
# - Refinery
# - Trade
# - Fortess
# - Mining
# - Energy
# - Farming
# - Then we'll check based on habitablity only.
# - 80% or better habitablity
# - 60% or better habitablity
ybs_automigrate_greener_pastures = {
	set_variable = {
		which = ybs_planet_found
		value = -1
	}
	# Check for Tomb Worlds first
	ybs_automigrate_tomb_world = yes
	# Check for Habitats for Void Dwellers second
	ybs_automigrate_habitat = yes
	# Check other worlds now
	ybs_automigrate_world_80 = yes
	# 60% habitablity specalised migration now.
	ybs_automigrate_world_60 = yes
	# If we found a new home, deduct cost.
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
		PREV = {
			ybs_automigrate_charge_resettlement_cost = yes
			# Clear category so they will take any available jobs.
			unemploy_pop = yes
			clear_pop_category = yes
			# Set a timed flag, so we don't try to move them again soon.
			set_timed_pop_flag = {
				flag = ybs_recently_migrated
				years = 1
			}
		}
	}
	# Could not find a suitable location.
	else = {
		log = "Yagisan - No Greener Pastures found."
	}
}

ybs_automigrate_tomb_world = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at research ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_research = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a research world with free jobs.
			ybs_move_pop_research_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at unity ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_unity = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a unity world with free jobs.
			ybs_move_pop_unity_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at foundry ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_foundry = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a foundry world with free jobs.
			ybs_move_pop_foundry_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at factory ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_factory = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a factory world with free jobs.
			ybs_move_pop_factory_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at refinery ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_refinery = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a refinery world with free jobs.
			ybs_move_pop_refinery_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at trade ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_trade = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a trade world with free jobs.
			ybs_move_pop_trade_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at defense ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_fortress = yes
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find a fortress world with free jobs.
			ybs_move_pop_fortress_tomb = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Can this pop handle any jobs on a Tomb world ?
		if = {
			limit = {
				PREV = {
					empire_has_good_habitability_on_tomb_worlds = yes
					NOT = {
						has_trait = trait_pc_habitat_preference
					}
				}
			}
			# Try to find any world with free jobs.
			ybs_move_pop_any_tomb = yes
		}
	}
}

ybs_automigrate_habitat = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at research ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_research = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a research habitat with free jobs.
			ybs_move_pop_research_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at unity ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_unity = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a unity habitat with free jobs.
			ybs_move_pop_unity_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at foundry ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_foundry = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a foundry habitat with free jobs.
			ybs_move_pop_foundry_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at factory ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_factory = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a factory habitat with free jobs.
			ybs_move_pop_factory_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at refinery ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_refinery = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a refinery habitat with free jobs.
			ybs_move_pop_refinery_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at trade ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_trade = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a trade habitat with free jobs.
			ybs_move_pop_trade_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at defense ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_fortress = yes
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find a fortress habitat with free jobs.
			ybs_move_pop_fortress_void = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Can this pop handle any jobs on a habitat ?
		if = {
			limit = {
				PREV = {
					has_trait = trait_pc_habitat_preference
				}
			}
			# Try to find any world with free jobs.
			ybs_move_pop_any_void = yes
		}
	}
}

ybs_automigrate_world_80 = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at research ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_research = yes
				}
			}
			# Try to find a research world with free jobs.
			ybs_move_pop_research_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at unity ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_unity = yes
				}
			}
			# Try to find a unity world with free jobs.
			ybs_move_pop_unity_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at foundry ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_foundry = yes
				}
			}
			# Try to find a foundry world with free jobs.
			ybs_move_pop_foundry_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at factory ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_factory = yes
				}
			}
			# Try to find a factory world with free jobs.
			ybs_move_pop_factory_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at refinery ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_refinery = yes
				}
			}
			# Try to find a refinery world with free jobs.
			ybs_move_pop_refinery_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at trade ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_trade = yes
				}
			}
			# Try to find a trade world with free jobs.
			ybs_move_pop_trade_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at defense ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_fortress = yes
				}
			}
			# Try to find a fortress world with free jobs.
			ybs_move_pop_fortress_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at mining ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_mining = yes
				}
			}
			# Try to find a mining world with free jobs.
			ybs_move_pop_mining_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at energy ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_energy = yes
				}
			}
			# Try to find an energy world with free jobs.
			ybs_move_pop_energy_80 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at farming ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_farming = yes
				}
			}
			# Try to find a farming world with free jobs.
			ybs_move_pop_farming_80 = yes
		}
	}
}

ybs_automigrate_world_60 = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at research ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_research = yes
				}
			}
			# Try to find a research world with free jobs.
			ybs_move_pop_research_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at unity ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_unity = yes
				}
			}
			# Try to find a unity world with free jobs.
			ybs_move_pop_unity_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at foundry ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_foundry = yes
				}
			}
			# Try to find a foundry world with free jobs.
			ybs_move_pop_foundry_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at factory ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_factory = yes
				}
			}
			# Try to find a factory world with free jobs.
			ybs_move_pop_factory_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at refinery ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_refinery = yes
				}
			}
			# Try to find a refinery world with free jobs.
			ybs_move_pop_refinery_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at trade ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_trade = yes
				}
			}
			# Try to find a trade world with free jobs.
			ybs_move_pop_trade_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at defense ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_fortress = yes
				}
			}
			# Try to find a fortress world with free jobs.
			ybs_move_pop_fortress_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at mining ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_mining = yes
				}
			}
			# Try to find a mining world with free jobs.
			ybs_move_pop_mining_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at energy ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_energy = yes
				}
			}
			# Try to find an energy world with free jobs.
			ybs_move_pop_energy_60 = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at farming ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_farming = yes
				}
			}
			# Try to find a farming world with free jobs.
			ybs_move_pop_farming_60 = yes
		}
	}
}

ybs_automigrate_world_any = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Try to find any popgrowth jobs.
		ybs_move_pop_popgrowth_any = yes
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at research ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_research = yes
				}
			}
			# Try to find a research world with free jobs.
			ybs_move_pop_research_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at unity ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_unity = yes
				}
			}
			# Try to find a unity world with free jobs.
			ybs_move_pop_unity_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at foundry ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_foundry = yes
				}
			}
			# Try to find a foundry world with free jobs.
			ybs_move_pop_foundry_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at factory ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_factory = yes
				}
			}
			# Try to find a factory world with free jobs.
			ybs_move_pop_factory_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at refinery ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_refinery = yes
				}
			}
			# Try to find a refinery world with free jobs.
			ybs_move_pop_refinery_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at trade ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_trade = yes
				}
			}
			# Try to find a trade world with free jobs.
			ybs_move_pop_trade_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at defense ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_fortress = yes
				}
			}
			# Try to find a fortress world with free jobs.
			ybs_move_pop_fortress_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at mining ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_mining = yes
				}
			}
			# Try to find a mining world with free jobs.
			ybs_move_pop_mining_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at energy ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_energy = yes
				}
			}
			# Try to find an energy world with free jobs.
			ybs_move_pop_energy_any = yes
		}
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is this pop good at farming ?
		if = {
			limit = {
				PREV = {
					ybs_pop_is_good_for_farming = yes
				}
			}
			# Try to find a farming world with free jobs.
			ybs_move_pop_farming_any = yes
		}
	}
}

ybs_automigrate_world_a_job = {
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is there at least 80% habitablity ?
		# Try to find a world with free jobs.
		ybs_move_pop_hab_80 = yes
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is there at least 60% habitablity ?
		# Try to find a world with free jobs.
		ybs_move_pop_hab_60 = yes
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Is there at least 40% habitablity ?
		# Try to find a world with free jobs.
		ybs_move_pop_hab_40 = yes
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Try to find any world with free jobs.
		ybs_move_pop_hab_any = yes
	}
	if = {
		limit = {
			check_variable = {
				which = ybs_planet_found
				value = -1
			}
		}
		# Last choice - is there a Cosmogenesis world ?
		ybs_move_pop_cosmogenesis = yes
	}
}

ybs_move_pop_research_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a research planet
			ybs_planet_is_good_for_research = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Research - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_unity_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a unity planet
			ybs_planet_is_good_for_unity = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Unity - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_foundry_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a foundry planet
			ybs_planet_is_good_for_foundry = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Foundry - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_factory_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a factory planet
			ybs_planet_is_good_for_factory = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Factory - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_refinery_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a refinery planet
			ybs_planet_is_good_for_refinery = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Refinery - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_trade_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a trade planet
			ybs_planet_is_good_for_trade = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Trade - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_fortress_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a fortress planet
			ybs_planet_is_good_for_fortress = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Fortress - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_mining_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a mining planet
			ybs_planet_is_good_for_mining = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Mining - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_energy_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this an energy planet
			ybs_planet_is_good_for_energy = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Energy - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_farming_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a farming planet
			ybs_planet_is_good_for_farming = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Farming - 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_research_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a research planet
			ybs_planet_is_good_for_research = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Research - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_unity_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a unity planet
			ybs_planet_is_good_for_unity = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Unity - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_foundry_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a foundry planet
			ybs_planet_is_good_for_foundry = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Foundry - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_factory_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a factory planet
			ybs_planet_is_good_for_factory = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Factory - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_refinery_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a refinery planet
			ybs_planet_is_good_for_refinery = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Refinery - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_trade_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a trade planet
			ybs_planet_is_good_for_trade = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Trade - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_fortress_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a fortress planet
			ybs_planet_is_good_for_fortress = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Fortress - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_mining_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a mining planet
			ybs_planet_is_good_for_mining = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Mining - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_energy_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this an energy planet
			ybs_planet_is_good_for_energy = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Energy - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_farming_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a farming planet
			ybs_planet_is_good_for_farming = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Farming - 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_research_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a research planet
			ybs_planet_is_good_for_research = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Research - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_unity_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a unity planet
			ybs_planet_is_good_for_unity = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Unity - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_foundry_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a foundry planet
			ybs_planet_is_good_for_foundry = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Foundry - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_factory_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a factory planet
			ybs_planet_is_good_for_factory = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Factory - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_refinery_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a refinery planet
			ybs_planet_is_good_for_refinery = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Refinery - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_trade_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a trade planet
			ybs_planet_is_good_for_trade = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Trade - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_fortress_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a fortress planet
			ybs_planet_is_good_for_fortress = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Fortress - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_mining_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a mining planet
			ybs_planet_is_good_for_mining = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Mining - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_energy_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this an energy planet
			ybs_planet_is_good_for_energy = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Energy - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_farming_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a farming planet
			ybs_planet_is_good_for_farming = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Farming - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_popgrowth_any = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Popgrowth is key - any free pop growth jobs should be filled
			ybs_planet_is_good_for_popgrowth = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Pop Growth - Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_bio_trophy = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Bio Trophy is a special case :(
			ybs_planet_is_good_for_bio_trophy = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Bio Trophy). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_hab_80 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Do we have at least 80% habitablity ?
			ybs_hab_80 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Hab 80). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_hab_60 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Do we have at least 60% habitablity ?
			ybs_hab_60 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Hab 60). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_hab_40 = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Do we have at least 40% habitablity ?
			ybs_hab_40 = yes
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Hab 40). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_hab_any = {
	random_owned_planet = {
		limit = {
			# Is there at least a job here ?
			ybs_planet_is_resettlement_target = yes
			NOT = {
				is_planet_class = pc_cosmogenesis_world
			}
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Any). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_cosmogenesis = {
	random_owned_planet = {
		limit = {
			# Is there at least a job here ?
			ybs_planet_is_resettlement_target = yes
			is_planet_class = pc_cosmogenesis_world
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Cosmogenesis). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_research_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a research planet
			ybs_planet_is_good_for_research = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Research - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_unity_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a unity planet
			ybs_planet_is_good_for_unity = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Unity - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_foundry_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a foundry planet
			ybs_planet_is_good_for_foundry = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Foundry - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_factory_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a factory planet
			ybs_planet_is_good_for_factory = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Factory - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_refinery_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a refinery planet
			ybs_planet_is_good_for_factory = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Refinery - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_trade_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a trade planet
			ybs_planet_is_good_for_trade = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Trade - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_fortress_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a fortress planet
			ybs_planet_is_good_for_fortress = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Fortress - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_mining_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a mining planet
			ybs_planet_is_good_for_mining = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Mining - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_energy_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this an energy planet
			ybs_planet_is_good_for_energy = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Energy - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_farming_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a farming planet
			ybs_planet_is_good_for_farming = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Farming - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_any_tomb = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Tomb World ?
			is_planet_class = pc_nuked
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Any - Tomb). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_research_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a research planet
			ybs_planet_is_good_for_research = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Research - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_unity_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a unity planet
			ybs_planet_is_good_for_unity = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Unity - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_foundry_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a foundry planet
			ybs_planet_is_good_for_foundry = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Foundry - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_factory_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a factory planet
			ybs_planet_is_good_for_factory = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Factory - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_refinery_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a refinery planet
			ybs_planet_is_good_for_refinery = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Refinery - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_trade_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a trade planet
			ybs_planet_is_good_for_trade = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Trade - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_fortress_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a fortress planet
			ybs_planet_is_good_for_fortress = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Fortress - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_mining_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a mining planet
			ybs_planet_is_good_for_mining = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Mining - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_energy_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this an energy planet
			ybs_planet_is_good_for_energy = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Energy - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_farming_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# I need to check for something that makes this a farming planet
			ybs_planet_is_good_for_farming = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Farming - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_move_pop_any_void = {
	random_owned_planet = {
		limit = {
			ybs_planet_is_resettlement_target = yes
			# Habitat ?
			is_planet_class = pc_habitat
		}
		resettle_pop = {
			pop = PREVPREV
			planet = this
		}
		log = "Yagisan - Employment found (Any - Habitat). Resettling to \\[This.GetName]"
		prev = {
			set_variable = {
				which = ybs_planet_found
				value = 1
			}
		}
	}
}

ybs_hab_80 = {
	habitability = {
		who = PREVPREV
		value >= 0.8
	}
	NOT = {
		is_planet_class = pc_cosmogenesis_world
	}
}

ybs_hab_60 = {
	habitability = {
		who = PREVPREV
		value >= 0.6
	}
	NOT = {
		is_planet_class = pc_cosmogenesis_world
	}
}

ybs_hab_40 = {
	habitability = {
		who = PREVPREV
		value >= 0.4
	}
	NOT = {
		is_planet_class = pc_cosmogenesis_world
	}
}

ybs_automigrate_charge_resettlement_cost = {
	# Because we resettled the pops, it was done for free. We need to
	# account for this cost now. We'll have to approximate it though.
	# Because we are only migrating to a location with free jobs, I have
	# elected to only bill energy, and waive the unity fee that would occur
	# from manual resettlement. I consider the pops willing to move.
	# We really should take into account traits for this cost.
	# Nomadic, Starborn, Stargazer, Double Jointed should be 25% cheaper.
	# Sedentary, Bulky should be 25% more expensive.
	planet = {
		set_variable = {
			which = migration_modifier_counter
			value = 0
		}
	}
	# Robotic pops are vulnerable to migration ping-pong when only ruler
	# jobs are avaiable, but they can't take them. Give them a free migration.
	if = {
		limit = {
			has_pop_flag = ybs_robot_ping_pong
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 5
			}
		}
	}
	# Nomadic / Sedentary are exclusive traits.
	# Double Jointed / Bulky are exclusive traits.
	# Stargazer is hive only. No opposite trait.
	if = {
		limit = {
			has_trait = trait_nomadic
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			has_trait = trait_robot_double_jointed
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			has_trait = trait_stargazer
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	else_if = {
		limit = {
			has_trait = trait_sedentary
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = -1
			}
		}
	}
	else_if = {
		limit = {
			has_trait = trait_robot_bulky
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = -1
			}
		}
	}
	# Starborn is pre-sapient only. It will be kept when uplift so can stack.
	# No opposite trait.
	if = {
		limit = {
			has_trait = trait_stargazer
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# If they have the adaptability tradition, and appropriation it should
	# be a 33% discount.
	if = {
		limit = {
			owner = {
				has_active_tradition = tr_adaptability_appropriation
			}
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# If they have the versatility tradition, and operational proxies it should
	# be a 33% discount.
	if = {
		limit = {
			owner = {
				has_active_tradition = tr_versatility_operational_proxies
			}
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# Corvee System should waive unity costs. I'll instead add a 25% discount
	# to the energy costs.
	if = {
		limit = {
			owner = {
				has_civic = civic_corvee_system
			}
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# Subsumed Will should waive unity costs. I'll instead add a 25% discount
	# to the energy costs.
	if = {
		limit = {
			owner = {
				has_civic = civic_hive_subsumed_will
			}
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# OTA Updates should waive unity costs. I'll instead add a 25% discount
	# to the energy costs.
	if = {
		limit = {
			owner = {
				has_civic = civic_machine_ota_updates
			}
		}
		planet = {
			change_variable = {
				which = migration_modifier_counter
				value = 1
			}
		}
	}
	# Billing logic
	# migration_modifier_counter = -1 - 125% cost
	# migration_modifier_counter =  0 - 100% cost
	# migration_modifier_counter =  1 -  75% cost
	# migration_modifier_counter =  2 -  50% cost
	# migration_modifier_counter =  3 -  25% cost
	# migration_modifier_counter =  4 -   0% cost
	switch = {
		trigger = is_pop_category
		ruler = {
			# Ruler base is 500
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -625
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -500
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -375
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -250
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		specialist = {
			# Specialist base is 250
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -321.5
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -250
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -187.5
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -62.5
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		worker = {
			# Worker base is 100
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -100
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -75
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		complex_drone = {
			# Complex Drone base is 100
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -100
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -75
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		simple_drone = {
			# Simple Drone base is 100
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -100
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -75
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		robot_servant = {
			# Robotic servitude base is 100
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -100
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -75
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		bio_trophy = {
			# Bio-Trophy base is 100
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -125
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -100
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -75
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		slave = {
			# Slave base is 50
			if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = -1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -62.5
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 0
						}
					}
				}
				owner = {
					add_resource = {
						energy = -50
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 1
						}
					}
				}
				owner = {
					add_resource = {
						energy = -37.5
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 2
						}
					}
				}
				owner = {
					add_resource = {
						energy = -25
					}
				}
			}
			else_if = {
				limit = {
					planet = {
						check_variable = {
							which = migration_modifier_counter
							value = 3
						}
					}
				}
				owner = {
					add_resource = {
						energy = -12.5
					}
				}
			}
			# If by chance migration_modifier_counter is 4 or higher, it's a free migration.
		}
		default = {
			# I have no idea what this is. Probably mod added. Bill them 250.
			owner = {
				add_resource = {
					energy = -250
				}
			}
		}
	}
}
